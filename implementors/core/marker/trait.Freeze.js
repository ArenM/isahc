(function() {var implementors = {};
implementors["isahc"] = [{"text":"impl !Freeze for <a class=\"struct\" href=\"isahc/struct.Body.html\" title=\"struct isahc::Body\">Body</a>","synthetic":true,"types":["isahc::body::Body"]},{"text":"impl Freeze for <a class=\"struct\" href=\"isahc/struct.HttpClient.html\" title=\"struct isahc::HttpClient\">HttpClient</a>","synthetic":true,"types":["isahc::client::HttpClient"]},{"text":"impl Freeze for <a class=\"struct\" href=\"isahc/struct.HttpClientBuilder.html\" title=\"struct isahc::HttpClientBuilder\">HttpClientBuilder</a>","synthetic":true,"types":["isahc::client::HttpClientBuilder"]},{"text":"impl&lt;'c&gt; Freeze for <a class=\"struct\" href=\"isahc/struct.ResponseFuture.html\" title=\"struct isahc::ResponseFuture\">ResponseFuture</a>&lt;'c&gt;","synthetic":true,"types":["isahc::client::ResponseFuture"]},{"text":"impl Freeze for <a class=\"struct\" href=\"isahc/struct.Metrics.html\" title=\"struct isahc::Metrics\">Metrics</a>","synthetic":true,"types":["isahc::metrics::Metrics"]},{"text":"impl Freeze for <a class=\"enum\" href=\"isahc/enum.Error.html\" title=\"enum isahc::Error\">Error</a>","synthetic":true,"types":["isahc::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"isahc/auth/struct.Credentials.html\" title=\"struct isahc::auth::Credentials\">Credentials</a>","synthetic":true,"types":["isahc::auth::Credentials"]},{"text":"impl Freeze for <a class=\"struct\" href=\"isahc/auth/struct.Authentication.html\" title=\"struct isahc::auth::Authentication\">Authentication</a>","synthetic":true,"types":["isahc::auth::Authentication"]},{"text":"impl Freeze for <a class=\"struct\" href=\"isahc/config/struct.Dialer.html\" title=\"struct isahc::config::Dialer\">Dialer</a>","synthetic":true,"types":["isahc::config::dial::Dialer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"isahc/config/struct.DialerParseError.html\" title=\"struct isahc::config::DialerParseError\">DialerParseError</a>","synthetic":true,"types":["isahc::config::dial::DialerParseError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"isahc/config/struct.ResolveMap.html\" title=\"struct isahc::config::ResolveMap\">ResolveMap</a>","synthetic":true,"types":["isahc::config::dns::ResolveMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"isahc/config/struct.CaCertificate.html\" title=\"struct isahc::config::CaCertificate\">CaCertificate</a>","synthetic":true,"types":["isahc::config::ssl::CaCertificate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"isahc/config/struct.ClientCertificate.html\" title=\"struct isahc::config::ClientCertificate\">ClientCertificate</a>","synthetic":true,"types":["isahc::config::ssl::ClientCertificate"]},{"text":"impl Freeze for <a class=\"struct\" href=\"isahc/config/struct.PrivateKey.html\" title=\"struct isahc::config::PrivateKey\">PrivateKey</a>","synthetic":true,"types":["isahc::config::ssl::PrivateKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"isahc/config/struct.SslOption.html\" title=\"struct isahc::config::SslOption\">SslOption</a>","synthetic":true,"types":["isahc::config::ssl::SslOption"]},{"text":"impl Freeze for <a class=\"struct\" href=\"isahc/config/struct.VersionNegotiation.html\" title=\"struct isahc::config::VersionNegotiation\">VersionNegotiation</a>","synthetic":true,"types":["isahc::config::VersionNegotiation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"isahc/config/struct.NetworkInterface.html\" title=\"struct isahc::config::NetworkInterface\">NetworkInterface</a>","synthetic":true,"types":["isahc::config::NetworkInterface"]},{"text":"impl Freeze for <a class=\"enum\" href=\"isahc/config/enum.DnsCache.html\" title=\"enum isahc::config::DnsCache\">DnsCache</a>","synthetic":true,"types":["isahc::config::dns::DnsCache"]},{"text":"impl Freeze for <a class=\"enum\" href=\"isahc/config/enum.RedirectPolicy.html\" title=\"enum isahc::config::RedirectPolicy\">RedirectPolicy</a>","synthetic":true,"types":["isahc::config::redirect::RedirectPolicy"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()